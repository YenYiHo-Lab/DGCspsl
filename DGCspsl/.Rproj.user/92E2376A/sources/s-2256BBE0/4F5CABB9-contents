############################
# Generate data of x and z #
############################
.libPaths("~/Rlibs")
iter<-as.numeric(commandArgs()[8])
library(mvtnorm)
library(matrixcalc)
library(Matrix)
fisher<-function(x){1/2*log((1+x)/(1-x))}
inv.fisher<-function(x){return((exp(2*x)-1)/(exp(2*x)+1))}
nb=5 # number of gene
q=choose(nb,2) # size of combination
n.loop=c(200,500,1000)
for(n in n.loop){
tau0<-rep(0,q) # real value of tau0 and tau1
wh<-rep(7:10,(q%/%10))+rep(0:((q%/%10)-1),rep(4,(q%/%10)))*10
tau1<-rep(0,q)
tau1[wh]<-c(0.1,0.2,0.3,0.5)
# setting liquid association
rho<-inv.fisher(t(t(outer(z,tau1))+tau0))

# Generating z
z<-runif(n,0,1)

# Generating x
time1<-Sys.time()
x<-matrix(rep(0,nb*n),nrow=n)
for (i in 1:n){
  cor.mat <- diag(rep(0.5,nb))
  cor.mat[lower.tri(cor.mat)] <- rho[i,]
  cor.mat<-cor.mat+t(cor.mat)
  while(is.positive.definite(cor.mat)==F){
    z[i]<-runif(1)
    rho[i,]<-inv.fisher(t(t(outer(z[i],tau1))+tau0))
    cor.mat <- diag(rep(0.5,nb))
    cor.mat[lower.tri(cor.mat)] <- rho[i,]
    cor.mat<-cor.mat+t(cor.mat)
  }
  x[i,]<-rnorm(nb)%*%chol(cor.mat) # Cholesky decomposition
}
time2<-Sys.time()
cat("generating x needs", as.numeric(time2-time1),"seconds\n")

xname<-paste("/work/wenda/spsl/simulation/performance/data/x_",n,".RData",sep="")
save(x,file=xname)
zname<-paste("/work/wenda/spsl/simulation/performance/data/z_",n,".RData",sep="")
save(z,file=zname)
}
